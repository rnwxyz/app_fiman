// Mocks generated by Mockito 5.4.0 from annotations
// in app_fiman/test/repositories/database/transcation_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:app_fiman/models/resume_model.dart' as _i6;
import 'package:app_fiman/models/transaction_model.dart' as _i3;
import 'package:app_fiman/repositories/database/transcation_repository.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransactionModel_1 extends _i1.SmartFake
    implements _i3.TransactionModel {
  _FakeTransactionModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TransactionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransactionRepository extends _i1.Mock
    implements _i4.TransactionRepository {
  MockTransactionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i5.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.getter(#database),
        )),
      ) as _i5.Future<_i2.Database>);
  @override
  _i5.Future<int> insertTransaction(_i3.TransactionModel? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTransaction,
          [transaction],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<List<_i3.TransactionModel>> getTransactions(
    int? offset,
    String? search,
    String? sort,
    int? categoryId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactions,
          [
            offset,
            search,
            sort,
            categoryId,
          ],
        ),
        returnValue: _i5.Future<List<_i3.TransactionModel>>.value(
            <_i3.TransactionModel>[]),
      ) as _i5.Future<List<_i3.TransactionModel>>);
  @override
  _i5.Future<_i3.TransactionModel> getTransactionById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionById,
          [id],
        ),
        returnValue:
            _i5.Future<_i3.TransactionModel>.value(_FakeTransactionModel_1(
          this,
          Invocation.method(
            #getTransactionById,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.TransactionModel>);
  @override
  _i5.Future<int> updateTransaction(_i3.TransactionModel? transaction) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTransaction,
          [transaction],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<int> deleteTransaction(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTransaction,
          [id],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<int> getTransactionSum() => (super.noSuchMethod(
        Invocation.method(
          #getTransactionSum,
          [],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<List<_i6.ResumeModel>> getTransactionResumeThisMonth() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionResumeThisMonth,
          [],
        ),
        returnValue:
            _i5.Future<List<_i6.ResumeModel>>.value(<_i6.ResumeModel>[]),
      ) as _i5.Future<List<_i6.ResumeModel>>);
}
